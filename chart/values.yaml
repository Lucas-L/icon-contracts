name: icon-contracts
networkName: mainnet

autoscaler:
  enabled: true
  maxReplicas: 25
  averageCPU: 50

service:
  name: icon-contracts
  type: ClusterIP
  externalPort: 80

ingress:
  enabled: true
  regionalHost: "app.region.example.com"
  apexHost: "app.example.com"
  annotations: null

api:
  image:
    repository: 868027517775.dkr.ecr.us-west-2.amazonaws.com/icon-contracts-api
    tag: latest
    pullPolicy: IfNotPresent
  replicas: 1
  annotations: null
  internal:
    port: 80
  health:
    port: 80
    prefix: "/health"
    pollingInterval: 60
  metrics:
    port: 9400
    prefix: "/metrics"
  rest:
    prefix: "/api/v1"
  logging:
    level: INFO
    toFile: false
    filename: "api.log"
    format: string
  db:
    user: ""
    password: ""
    host: ""
    port: 5432
    database: contracts
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  tolerations: ""
  nodeSelector: null
  affinity: null
  priorityClassName: ""

worker:
  image:
    repository: 868027517775.dkr.ecr.us-west-2.amazonaws.com/icon-contracts-worker
    tag: latest
    pullPolicy: IfNotPresent
  replicas: 1
  annotations: null
  health:
    port: 9300
    prefix: "/health"
    pollingInterval: 60
  metrics:
    port: 9400
    prefix: "/metrics"
  rest:
    prefix: "/api/v1"
  websocket:
    prefix: "/ws/v1"
  logging:
    level: INFO
    toFile: false
    filename: "worker.log"
    format: string
  s3:
    bucket: ""
    awsAccessKey: ""
    awsSecretAccessKey: ""
  db:
    user: ""
    password: ""
    host: ""
    port: 5432
    database: contracts
  kafka:
    topics:
      blocks: blocks
      transactions: transactions
      logs: logs
      contractsProcessed: contracts-processed
      contractsDLQ: contracts-worker-dlq
    consumerGroup:
      head: contracts-head
      tail: contracts-tail
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  tolerations: ""
  nodeSelector: null
  affinity: null
  priorityClassName: ""

kafka:
  kafkaBrokerURL: ""
  schemaRegistryURL: ""
  consumerGroup: contracts-consumer-group

#db:
#  driver: postgres
#  name: contracts
#  sslMode: disable
#  timezone: UTC
